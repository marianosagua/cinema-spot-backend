generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model categories {
  id     Int      @id @default(autoincrement())
  name   String   @unique @db.VarChar(50)
  movies movies[]
}

model halls {
  hall_number     Int         @id
  available_seats Int         @default(20)
  showtimes       showtimes[]
}

model movies {
  id          Int         @id @default(autoincrement())
  title       String
  description String
  poster      String
  category    Int?
  categories  categories? @relation(fields: [category], references: [id], onUpdate: NoAction, map: "fk_category")
  showtimes   showtimes[]
}

model reservations {
  id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id     String    @unique @db.Uuid
  showtime_id String    @db.Uuid
  showtimes   showtimes @relation(fields: [showtime_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users       users     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model users {
  id              String        @id(map: "users_pkey1") @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email           String        @unique(map: "users_email_key1") @db.VarChar(100)
  password        String        @unique(map: "users_password_key1") @db.VarChar(255)
  name            String        @db.VarChar(100)
  role            Int?          @default(1)
  email_validated Boolean?      @default(false)
  reservations    reservations?
  roles           roles?        @relation(fields: [role], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "users_role_fkey1")
}

model roles {
  id          Int     @id @default(autoincrement())
  description String?
  name        String  @unique(map: "roles_role_name_key")
  users       users[]
}

model showtimes {
  id                String         @id(map: "functions_pkey") @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  movie             Int?
  start_time        DateTime       @db.Timestamp(6)
  end_time          DateTime       @db.Timestamp(6)
  hall              Int
  reservationscount Int?           @default(20)
  reservations      reservations[]
  halls             halls          @relation(fields: [hall], references: [hall_number], onDelete: NoAction, onUpdate: NoAction, map: "fk_halls")
  movies            movies?        @relation(fields: [movie], references: [id], onUpdate: NoAction, map: "fk_movie")
}
